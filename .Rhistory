}
# The next four countries
plot2 <- ggplot() +
geom_point(data=data_train[data_train$country %in% countries[5:8], ], aes(x=unemployment_rate, y=suicides_per_100k, col=country)) +
labs(x='Unemployment rate', y ='Suicide rate')
hex_code_4 <- hue_pal()(4)
for(j in 5:8) {
beta1 <- quantile(draws$beta1[,j], c(0.5))[['50%']]
df_country <- data.frame(unemployment=(0:30))
df_country$suicides <- beta0 + beta1 * df_country$unemployment
plot2 <- plot2 + geom_line(data=df_country, aes(x=unemployment, y=suicides), col=hex_code_4[j-4])
}
# The next four countries
plot3 <- ggplot() +
geom_point(data=data_train[data_train$country %in% countries[9:12], ], aes(x=unemployment_rate, y=suicides_per_100k, col=country)) +
labs(x='Unemployment rate', y ='Suicide rate')
hex_code_4 <- hue_pal()(4)
for(j in 9:12) {
beta1 <- quantile(draws$beta1[,j], c(0.5))[['50%']]
df_country <- data.frame(unemployment=(0:30))
df_country$suicides <- beta0 + beta1 * df_country$unemployment
plot3 <- plot3 + geom_line(data=df_country, aes(x=unemployment, y=suicides), col=hex_code_4[j-8])
}
# The final five countries
plot4 <- ggplot() +
geom_point(data=data_train[data_train$country %in% countries[13:17], ], aes(x=unemployment_rate, y=suicides_per_100k, col=country)) +
labs(x='Unemployment rate', y ='Suicide rate')
hex_code_4 <- hue_pal()(5)
for(j in 13:17) {
beta1 <- quantile(draws$beta1[,j], c(0.5))[['50%']]
df_country <- data.frame(unemployment=(0:30))
df_country$suicides <- beta0 + beta1 * df_country$unemployment
plot4 <- plot4 + geom_line(data=df_country, aes(x=unemployment, y=suicides), col=hex_code_4[j-12])
}
grid.arrange(plot1, plot2, plot3, plot4, nrow=2)
log_lik_hie <- extract_log_lik(sm_hie, merge_chains=F)
r_eff_hie <- relative_eff(exp(log_lik_hie), cores=4)
loo_hie <- loo(log_lik_hie, r_eff=r_eff_hie, cores=4)
pareto_k_hie <- as.data.frame(pareto_k_values(loo_hie))
ggplot(pareto_k_hie, aes(y=pareto_k_values(loo_hie), x=1:(425-17))) +
geom_point() +
geom_hline(yintercept=0.7, linetype="dashed") +
geom_hline(yintercept=1) +
ylim(-0.25, 1) +
labs(titles='Pareto k values for observations of the hierachical model',
x='Observation', y='Pareto k value')
pred <- c()
beta0_mean <- mean(draws$beta0)
for (j in 1:J) {
beta1_mean <- mean(draws$beta1[,j])
pred <- c(pred, data_valid$unemployment_rate[j]*beta1_mean + beta0_mean)
}
data_valid$pred_hie <- pred
ggplot() +
geom_point(data=data_valid, aes(x=unemployment_rate, y=suicides_per_100k, col='blue')) +
geom_point(data=data_valid, aes(x=unemployment_rate, y=pred_hie, col='red')) +
theme(legend.title = element_blank())+
scale_color_manual(labels = c("True value", "Predicted value"), values = c("blue", "red"))
rmse(data_valid$suicides_per_100k, data_valid$pred_hie)
loo_compare(list('separate'=loo_sep, 'hierachical'=loo_hie))
loo_compare(list(loo_sep, loo_hie))
loo_compare(list('separate'=loo_sep, 'hierachical'=loo_hie))
library(rstan)
library(ggplot2)
library(dplyr)
library(tidyr)
library(grid)
library(gridExtra)
library(scales)
library(loo)
library(Metrics)
data <- read.csv("./data/suicide_with_unemploy.csv")
ggplot(data=data, aes(x=unemployment_rate, y=suicides_per_100k, col=country))+
geom_point()
# Add a group indicator column to the data
countries <- unique(data$country)
for (i in 1:length(countries)) {
data$group[data$country == countries[i]] <- i
}
data_train <- data[data$year < 2015,]  # We leave out data in 2015 to use in prediction
data_valid <- data[data$year == 2015,]
# Data for the stan models
stan_data <- list(
N = nrow(data_train),
J = length(countries),
id = data_train$group,
x = data_train$unemployment_rate,
y = data_train$suicides_per_100k
)
writeLines(readLines('stan_model/separate.stan'))
sm_sep <- stan(file='stan_model/separate.stan', data=stan_data, iter=2000, refresh=0)
traceplot(sm_sep, pars=c('beta0[1]', 'beta1[1]'))
df <- as.data.frame(summary(sm_sep)$summary)
head(df, 34)
J <- length(countries)
hex_code <- hue_pal()(J)
plot <- ggplot() +
geom_point(data=data_train, aes(x=unemployment_rate, y=suicides_per_100k, col=country))
draws <- rstan::extract(sm_sep)
for(j in 1:J) {
beta0 <- quantile(draws$beta0[,j], c(0.05, 0.5, 0.95))[['50%']]
beta1 <- quantile(draws$beta1[,j], c(0.05, 0.5, 0.95))[['50%']]
df_country <- data.frame(unemployment=c(0:30))
df_country$suicides <- beta0 + beta1 * df_country$unemployment
plot <- plot + geom_line(data=df_country, aes(x=unemployment, y=suicides), col=hex_code[j])
}
plot
# The first four countries
hex_code_4 <- hue_pal()(4)
plot1 <- ggplot() +
geom_point(data=data_train[data_train$country %in% countries[1:4], ], aes(x=unemployment_rate, y=suicides_per_100k, col=country)) +
labs(x='Unemployment rate', y ='Suicide rate')
for(j in 1:4) {
beta0 <- quantile(draws$beta0[,j], c(0.05, 0.5, 0.95))[['50%']]
beta1 <- quantile(draws$beta1[,j], c(0.5))[['50%']]
df_country <- data.frame(unemployment=(0:30))
df_country$suicides <- beta0 + beta1 * df_country$unemployment
plot1 <- plot1 + geom_line(data=df_country, aes(x=unemployment, y=suicides), col=hex_code_4[j])
}
# The next four countries
plot2 <- ggplot() +
geom_point(data=data_train[data_train$country %in% countries[5:8], ], aes(x=unemployment_rate, y=suicides_per_100k, col=country)) +
labs(x='Unemployment rate', y ='Suicide rate')
hex_code_4 <- hue_pal()(4)
for(j in 5:8) {
beta0 <- quantile(draws$beta0[,j], c(0.05, 0.5, 0.95))[['50%']]
beta1 <- quantile(draws$beta1[,j], c(0.5))[['50%']]
df_country <- data.frame(unemployment=(0:30))
df_country$suicides <- beta0 + beta1 * df_country$unemployment
plot2 <- plot2 + geom_line(data=df_country, aes(x=unemployment, y=suicides), col=hex_code_4[j-4])
}
# The next four countries
plot3 <- ggplot() +
geom_point(data=data_train[data_train$country %in% countries[9:12], ], aes(x=unemployment_rate, y=suicides_per_100k, col=country)) +
labs(x='Unemployment rate', y ='Suicide rate')
hex_code_4 <- hue_pal()(4)
for(j in 9:12) {
beta0 <- quantile(draws$beta0[,j], c(0.05, 0.5, 0.95))[['50%']]
beta1 <- quantile(draws$beta1[,j], c(0.5))[['50%']]
df_country <- data.frame(unemployment=(0:30))
df_country$suicides <- beta0 + beta1 * df_country$unemployment
plot3 <- plot3 + geom_line(data=df_country, aes(x=unemployment, y=suicides), col=hex_code_4[j-8])
}
# The final five countries
plot4 <- ggplot() +
geom_point(data=data_train[data_train$country %in% countries[13:17], ], aes(x=unemployment_rate, y=suicides_per_100k, col=country)) +
labs(x='Unemployment rate', y ='Suicide rate')
hex_code_4 <- hue_pal()(5)
for(j in 13:17) {
beta0 <- quantile(draws$beta0[,j], c(0.05, 0.5, 0.95))[['50%']]
beta1 <- quantile(draws$beta1[,j], c(0.5))[['50%']]
df_country <- data.frame(unemployment=(0:30))
df_country$suicides <- beta0 + beta1 * df_country$unemployment
plot4 <- plot4 + geom_line(data=df_country, aes(x=unemployment, y=suicides), col=hex_code_4[j-12])
}
grid.arrange(plot1, plot2, plot3, plot4, nrow=2)
log_lik_sep <- extract_log_lik(sm_sep, merge_chains = FALSE)
r_eff_sep <- relative_eff(exp(log_lik_sep), cores=4)
loo_sep <- loo(log_lik_sep, r_eff=r_eff_sep, cores=4)
pareto_k_sep <- as.data.frame(pareto_k_values(loo_sep))
ggplot(pareto_k_sep, aes(y=pareto_k_values(loo_sep), x=1:(425-17))) +
geom_point() +
geom_hline(yintercept=0.7, linetype="dashed") +
geom_hline(yintercept=1) +
ylim(-0.25, 1.25) +
labs(titles='Pareto k values for observations of the separate model',
x='Observation', y='Pareto k value')
pred <- c()
for (j in 1:J) {
beta0_mean <- mean(draws$beta0[,j])
beta1_mean <- mean(draws$beta1[,j])
pred <- c(pred, data_valid$unemployment_rate[j]*beta1_mean + beta0_mean)
}
data_valid$pred_sep <- pred
ggplot() +
geom_point(data=data_valid, aes(x=unemployment_rate, y=suicides_per_100k, col='blue')) +
geom_point(data=data_valid, aes(x=unemployment_rate, y=pred_sep, col='red')) +
theme(legend.title = element_blank())+
scale_color_manual(labels = c("True value", "Predicted value"), values = c("blue", "red"))
rmse(data_valid$suicides_per_100k, data_valid$pred_sep)
writeLines(readLines('stan_model/linear_hierachical.stan'))
sm_hie <- stan(file='stan_model/linear_hierachical.stan', data=stan_data, iter=2000, refresh=0)
traceplot(sm_hie, pars=c('beta0', 'beta1[1]'))
df <- as.data.frame(summary(sm_hie)$summary)
head(df, 34)
hex_code <- hue_pal()(J)
plot <- ggplot() +
geom_point(data=data_train, aes(x=unemployment_rate, y=suicides_per_100k, col=country)) +
labs(x='Unemployment rate', y ='Suicide rate') +
ylim(c(-10,50))
draws <- rstan::extract(sm_hie)
beta0 <- quantile(draws$beta0, c(0.5))[['50%']]
for(j in 1:J) {
beta1 <- quantile(draws$beta1[,j], c(0.5))[['50%']]
df_country <- data.frame(unemployment=(0:30))
df_country$suicides <- beta0 + beta1 * df_country$unemployment
plot <- plot + geom_line(data=df_country, aes(x=unemployment, y=suicides), col=hex_code[j])
}
plot
# The first four countries
hex_code_4 <- hue_pal()(4)
plot1 <- ggplot() +
geom_point(data=data_train[data_train$country %in% countries[1:4], ], aes(x=unemployment_rate, y=suicides_per_100k, col=country)) +
labs(x='Unemployment rate', y ='Suicide rate')
for(j in 1:4) {
beta1 <- quantile(draws$beta1[,j], c(0.5))[['50%']]
df_country <- data.frame(unemployment=(0:30))
df_country$suicides <- beta0 + beta1 * df_country$unemployment
plot1 <- plot1 + geom_line(data=df_country, aes(x=unemployment, y=suicides), col=hex_code_4[j])
}
# The next four countries
plot2 <- ggplot() +
geom_point(data=data_train[data_train$country %in% countries[5:8], ], aes(x=unemployment_rate, y=suicides_per_100k, col=country)) +
labs(x='Unemployment rate', y ='Suicide rate')
hex_code_4 <- hue_pal()(4)
for(j in 5:8) {
beta1 <- quantile(draws$beta1[,j], c(0.5))[['50%']]
df_country <- data.frame(unemployment=(0:30))
df_country$suicides <- beta0 + beta1 * df_country$unemployment
plot2 <- plot2 + geom_line(data=df_country, aes(x=unemployment, y=suicides), col=hex_code_4[j-4])
}
# The next four countries
plot3 <- ggplot() +
geom_point(data=data_train[data_train$country %in% countries[9:12], ], aes(x=unemployment_rate, y=suicides_per_100k, col=country)) +
labs(x='Unemployment rate', y ='Suicide rate')
hex_code_4 <- hue_pal()(4)
for(j in 9:12) {
beta1 <- quantile(draws$beta1[,j], c(0.5))[['50%']]
df_country <- data.frame(unemployment=(0:30))
df_country$suicides <- beta0 + beta1 * df_country$unemployment
plot3 <- plot3 + geom_line(data=df_country, aes(x=unemployment, y=suicides), col=hex_code_4[j-8])
}
# The final five countries
plot4 <- ggplot() +
geom_point(data=data_train[data_train$country %in% countries[13:17], ], aes(x=unemployment_rate, y=suicides_per_100k, col=country)) +
labs(x='Unemployment rate', y ='Suicide rate')
hex_code_4 <- hue_pal()(5)
for(j in 13:17) {
beta1 <- quantile(draws$beta1[,j], c(0.5))[['50%']]
df_country <- data.frame(unemployment=(0:30))
df_country$suicides <- beta0 + beta1 * df_country$unemployment
plot4 <- plot4 + geom_line(data=df_country, aes(x=unemployment, y=suicides), col=hex_code_4[j-12])
}
grid.arrange(plot1, plot2, plot3, plot4, nrow=2)
log_lik_hie <- extract_log_lik(sm_hie, merge_chains=F)
r_eff_hie <- relative_eff(exp(log_lik_hie), cores=4)
loo_hie <- loo(log_lik_hie, r_eff=r_eff_hie, cores=4)
pareto_k_hie <- as.data.frame(pareto_k_values(loo_hie))
ggplot(pareto_k_hie, aes(y=pareto_k_values(loo_hie), x=1:(425-17))) +
geom_point() +
geom_hline(yintercept=0.7, linetype="dashed") +
geom_hline(yintercept=1) +
ylim(-0.25, 1) +
labs(titles='Pareto k values for observations of the hierachical model',
x='Observation', y='Pareto k value')
pred <- c()
beta0_mean <- mean(draws$beta0)
for (j in 1:J) {
beta1_mean <- mean(draws$beta1[,j])
pred <- c(pred, data_valid$unemployment_rate[j]*beta1_mean + beta0_mean)
}
data_valid$pred_hie <- pred
ggplot() +
geom_point(data=data_valid, aes(x=unemployment_rate, y=suicides_per_100k, col='blue')) +
geom_point(data=data_valid, aes(x=unemployment_rate, y=pred_hie, col='red')) +
theme(legend.title = element_blank())+
scale_color_manual(labels = c("True value", "Predicted value"), values = c("blue", "red"))
rmse(data_valid$suicides_per_100k, data_valid$pred_hie)
writeLines(readLines('stan_model/linear_hierachical_2.stan'))
sm_hie_2 <- stan(file='linear_hierachical_2.stan', data=stan_data, iter=2000, refresh=0)
head(df, 20)
sm_hie_2 <- stan(file='stan_model/linear_hierachical_2.stan', data=stan_data, iter=2000, refresh=0)
# Model comparision
From previous parts, it can be seen that the hierachical model seems to be a better choice. It has a slightly smaller RMSE when predicting new values, and also less susceptible to optimistic due to PSIS analysis. But to be sure, we will perform a model comparision with `loo_compare`
rstan:::rstudio_stanc("stan_model/separate _2.stan")
sm_hie_2 <- stan(file='stan_model/linear_hierachical_2.stan', data=stan_data, iter=2000, refresh=0)
summary(sm_hie_2)
head(summary(sm_hie_2), 20)
head(summary(sm_hie_2), 20)
head(as.data.frame(summary(sm_hie_2)), 20)
loo_compare(list('separate'=loo_sep, 'hierachical'=loo_hie))
head(as.data.frame(summary(sm_hie_2))$summary, 20)
head(as.data.frame(summary(sm_hie_2)$summary), 20)
head(df, 20)
writeLines(readLines('stan_model/separate_2.stan'))
writeLines(readLines('stan_model/separate_2.stan'))
writeLines(readLines('stan_model/separate_2.stan'))
sm_sep_2 <- stan(file='stan_model/linear_separate_2.stan', data=stan_data, iter=2000, refresh=0)
head(as.data.frame(summary(sm_sep_2)$summary), 34)
sm_sep_2 <- stan(file='stan_model/linear_separate_2.stan', data=stan_data, iter=2000, refresh=0)
sm_sep_2 <- stan(file='stan_model/separate_2.stan', data=stan_data, iter=2000, refresh=0)
df <- as.data.frame(summary(sm_sep)$summary)
head(df, 34)
sm_sep_2 <- stan(file='stan_model/separate_2.stan', data=stan_data, iter=2000, refresh=0)
sm_sep_2 <- stan(file='stan_model/separate_2.stan', data=stan_data, iter=2000, refresh=0)
head(as.data.frame(summary(sm_sep_2)$summary), 34)
head(df, 34)
library(rstan)
library(ggplot2)
library(dplyr)
library(tidyr)
library(grid)
library(gridExtra)
library(scales)
library(loo)
library(Metrics)
data <- read.csv("./data/suicide_with_unemploy.csv")
ggplot(data=data, aes(x=unemployment_rate, y=suicides_per_100k, col=country))+
geom_point()
# Add a group indicator column to the data
countries <- unique(data$country)
for (i in 1:length(countries)) {
data$group[data$country == countries[i]] <- i
}
data_train <- data[data$year < 2015,]  # We leave out data in 2015 to use in prediction
data_valid <- data[data$year == 2015,]
# Data for the stan models
stan_data <- list(
N = nrow(data_train),
J = length(countries),
id = data_train$group,
x = data_train$unemployment_rate,
y = data_train$suicides_per_100k
)
writeLines(readLines('stan_model/separate.stan'))
sm_sep <- stan(file='stan_model/separate.stan', data=stan_data, iter=2000, refresh=0)
traceplot(sm_sep, pars=c('beta0[1]', 'beta1[1]'))
df <- as.data.frame(summary(sm_sep)$summary)
head(df, 34)
J <- length(countries)
hex_code <- hue_pal()(J)
plot <- ggplot() +
geom_point(data=data_train, aes(x=unemployment_rate, y=suicides_per_100k, col=country))
draws <- rstan::extract(sm_sep)
for(j in 1:J) {
beta0 <- quantile(draws$beta0[,j], c(0.05, 0.5, 0.95))[['50%']]
beta1 <- quantile(draws$beta1[,j], c(0.05, 0.5, 0.95))[['50%']]
df_country <- data.frame(unemployment=c(0:30))
df_country$suicides <- beta0 + beta1 * df_country$unemployment
plot <- plot + geom_line(data=df_country, aes(x=unemployment, y=suicides), col=hex_code[j])
}
plot
# The first four countries
hex_code_4 <- hue_pal()(4)
plot1 <- ggplot() +
geom_point(data=data_train[data_train$country %in% countries[1:4], ], aes(x=unemployment_rate, y=suicides_per_100k, col=country)) +
labs(x='Unemployment rate', y ='Suicide rate')
for(j in 1:4) {
beta0 <- quantile(draws$beta0[,j], c(0.05, 0.5, 0.95))[['50%']]
beta1 <- quantile(draws$beta1[,j], c(0.5))[['50%']]
df_country <- data.frame(unemployment=(0:30))
df_country$suicides <- beta0 + beta1 * df_country$unemployment
plot1 <- plot1 + geom_line(data=df_country, aes(x=unemployment, y=suicides), col=hex_code_4[j])
}
# The next four countries
plot2 <- ggplot() +
geom_point(data=data_train[data_train$country %in% countries[5:8], ], aes(x=unemployment_rate, y=suicides_per_100k, col=country)) +
labs(x='Unemployment rate', y ='Suicide rate')
hex_code_4 <- hue_pal()(4)
for(j in 5:8) {
beta0 <- quantile(draws$beta0[,j], c(0.05, 0.5, 0.95))[['50%']]
beta1 <- quantile(draws$beta1[,j], c(0.5))[['50%']]
df_country <- data.frame(unemployment=(0:30))
df_country$suicides <- beta0 + beta1 * df_country$unemployment
plot2 <- plot2 + geom_line(data=df_country, aes(x=unemployment, y=suicides), col=hex_code_4[j-4])
}
# The next four countries
plot3 <- ggplot() +
geom_point(data=data_train[data_train$country %in% countries[9:12], ], aes(x=unemployment_rate, y=suicides_per_100k, col=country)) +
labs(x='Unemployment rate', y ='Suicide rate')
hex_code_4 <- hue_pal()(4)
for(j in 9:12) {
beta0 <- quantile(draws$beta0[,j], c(0.05, 0.5, 0.95))[['50%']]
beta1 <- quantile(draws$beta1[,j], c(0.5))[['50%']]
df_country <- data.frame(unemployment=(0:30))
df_country$suicides <- beta0 + beta1 * df_country$unemployment
plot3 <- plot3 + geom_line(data=df_country, aes(x=unemployment, y=suicides), col=hex_code_4[j-8])
}
# The final five countries
plot4 <- ggplot() +
geom_point(data=data_train[data_train$country %in% countries[13:17], ], aes(x=unemployment_rate, y=suicides_per_100k, col=country)) +
labs(x='Unemployment rate', y ='Suicide rate')
hex_code_4 <- hue_pal()(5)
for(j in 13:17) {
beta0 <- quantile(draws$beta0[,j], c(0.05, 0.5, 0.95))[['50%']]
beta1 <- quantile(draws$beta1[,j], c(0.5))[['50%']]
df_country <- data.frame(unemployment=(0:30))
df_country$suicides <- beta0 + beta1 * df_country$unemployment
plot4 <- plot4 + geom_line(data=df_country, aes(x=unemployment, y=suicides), col=hex_code_4[j-12])
}
grid.arrange(plot1, plot2, plot3, plot4, nrow=2)
log_lik_sep <- extract_log_lik(sm_sep, merge_chains = FALSE)
r_eff_sep <- relative_eff(exp(log_lik_sep), cores=4)
loo_sep <- loo(log_lik_sep, r_eff=r_eff_sep, cores=4)
pareto_k_sep <- as.data.frame(pareto_k_values(loo_sep))
ggplot(pareto_k_sep, aes(y=pareto_k_values(loo_sep), x=1:(425-17))) +
geom_point() +
geom_hline(yintercept=0.7, linetype="dashed") +
geom_hline(yintercept=1) +
ylim(-0.25, 1.25) +
labs(titles='Pareto k values for observations of the separate model',
x='Observation', y='Pareto k value')
pred <- c()
for (j in 1:J) {
beta0_mean <- mean(draws$beta0[,j])
beta1_mean <- mean(draws$beta1[,j])
pred <- c(pred, data_valid$unemployment_rate[j]*beta1_mean + beta0_mean)
}
data_valid$pred_sep <- pred
ggplot() +
geom_point(data=data_valid, aes(x=unemployment_rate, y=suicides_per_100k, col='blue')) +
geom_point(data=data_valid, aes(x=unemployment_rate, y=pred_sep, col='red')) +
theme(legend.title = element_blank())+
scale_color_manual(labels = c("True value", "Predicted value"), values = c("blue", "red"))
rmse(data_valid$suicides_per_100k, data_valid$pred_sep)
writeLines(readLines('stan_model/separate_2.stan'))
sm_sep_2 <- stan(file='stan_model/separate_2.stan', data=stan_data, iter=2000, refresh=0)
head(as.data.frame(summary(sm_sep_2)$summary), 34)
head(df, 34)
writeLines(readLines('stan_model/linear_hierachical.stan'))
sm_hie <- stan(file='stan_model/linear_hierachical.stan', data=stan_data, iter=2000, refresh=0)
traceplot(sm_hie, pars=c('beta0', 'beta1[1]'))
df <- as.data.frame(summary(sm_hie)$summary)
head(df, 20)
hex_code <- hue_pal()(J)
plot <- ggplot() +
geom_point(data=data_train, aes(x=unemployment_rate, y=suicides_per_100k, col=country)) +
labs(x='Unemployment rate', y ='Suicide rate') +
ylim(c(-10,50))
draws <- rstan::extract(sm_hie)
beta0 <- quantile(draws$beta0, c(0.5))[['50%']]
for(j in 1:J) {
beta1 <- quantile(draws$beta1[,j], c(0.5))[['50%']]
df_country <- data.frame(unemployment=(0:30))
df_country$suicides <- beta0 + beta1 * df_country$unemployment
plot <- plot + geom_line(data=df_country, aes(x=unemployment, y=suicides), col=hex_code[j])
}
plot
# The first four countries
hex_code_4 <- hue_pal()(4)
plot1 <- ggplot() +
geom_point(data=data_train[data_train$country %in% countries[1:4], ], aes(x=unemployment_rate, y=suicides_per_100k, col=country)) +
labs(x='Unemployment rate', y ='Suicide rate')
for(j in 1:4) {
beta1 <- quantile(draws$beta1[,j], c(0.5))[['50%']]
df_country <- data.frame(unemployment=(0:30))
df_country$suicides <- beta0 + beta1 * df_country$unemployment
plot1 <- plot1 + geom_line(data=df_country, aes(x=unemployment, y=suicides), col=hex_code_4[j])
}
# The next four countries
plot2 <- ggplot() +
geom_point(data=data_train[data_train$country %in% countries[5:8], ], aes(x=unemployment_rate, y=suicides_per_100k, col=country)) +
labs(x='Unemployment rate', y ='Suicide rate')
hex_code_4 <- hue_pal()(4)
for(j in 5:8) {
beta1 <- quantile(draws$beta1[,j], c(0.5))[['50%']]
df_country <- data.frame(unemployment=(0:30))
df_country$suicides <- beta0 + beta1 * df_country$unemployment
plot2 <- plot2 + geom_line(data=df_country, aes(x=unemployment, y=suicides), col=hex_code_4[j-4])
}
# The next four countries
plot3 <- ggplot() +
geom_point(data=data_train[data_train$country %in% countries[9:12], ], aes(x=unemployment_rate, y=suicides_per_100k, col=country)) +
labs(x='Unemployment rate', y ='Suicide rate')
hex_code_4 <- hue_pal()(4)
for(j in 9:12) {
beta1 <- quantile(draws$beta1[,j], c(0.5))[['50%']]
df_country <- data.frame(unemployment=(0:30))
df_country$suicides <- beta0 + beta1 * df_country$unemployment
plot3 <- plot3 + geom_line(data=df_country, aes(x=unemployment, y=suicides), col=hex_code_4[j-8])
}
# The final five countries
plot4 <- ggplot() +
geom_point(data=data_train[data_train$country %in% countries[13:17], ], aes(x=unemployment_rate, y=suicides_per_100k, col=country)) +
labs(x='Unemployment rate', y ='Suicide rate')
hex_code_4 <- hue_pal()(5)
for(j in 13:17) {
beta1 <- quantile(draws$beta1[,j], c(0.5))[['50%']]
df_country <- data.frame(unemployment=(0:30))
df_country$suicides <- beta0 + beta1 * df_country$unemployment
plot4 <- plot4 + geom_line(data=df_country, aes(x=unemployment, y=suicides), col=hex_code_4[j-12])
}
grid.arrange(plot1, plot2, plot3, plot4, nrow=2)
log_lik_hie <- extract_log_lik(sm_hie, merge_chains=F)
r_eff_hie <- relative_eff(exp(log_lik_hie), cores=4)
loo_hie <- loo(log_lik_hie, r_eff=r_eff_hie, cores=4)
pareto_k_hie <- as.data.frame(pareto_k_values(loo_hie))
ggplot(pareto_k_hie, aes(y=pareto_k_values(loo_hie), x=1:(425-17))) +
geom_point() +
geom_hline(yintercept=0.7, linetype="dashed") +
geom_hline(yintercept=1) +
ylim(-0.25, 1) +
labs(titles='Pareto k values for observations of the hierachical model',
x='Observation', y='Pareto k value')
pred <- c()
beta0_mean <- mean(draws$beta0)
for (j in 1:J) {
beta1_mean <- mean(draws$beta1[,j])
pred <- c(pred, data_valid$unemployment_rate[j]*beta1_mean + beta0_mean)
}
data_valid$pred_hie <- pred
ggplot() +
geom_point(data=data_valid, aes(x=unemployment_rate, y=suicides_per_100k, col='blue')) +
geom_point(data=data_valid, aes(x=unemployment_rate, y=pred_hie, col='red')) +
theme(legend.title = element_blank())+
scale_color_manual(labels = c("True value", "Predicted value"), values = c("blue", "red"))
rmse(data_valid$suicides_per_100k, data_valid$pred_hie)
writeLines(readLines('stan_model/linear_hierachical_2.stan'))
sm_hie_2 <- stan(file='stan_model/linear_hierachical_2.stan', data=stan_data, iter=2000, refresh=0)
head(as.data.frame(summary(sm_hie_2)$summary), 20)
head(df, 20)
loo_compare(list('separate'=loo_sep, 'hierachical'=loo_hie))
